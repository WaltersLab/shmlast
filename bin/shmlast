#!/usr/bin/env python3

import argparse
import os

from shmlast.crbl import CRBL
from shmlast.crbl import RBL
from shmlast.util import prog_string, run_tasks
from shmlast import __version__


def rbl_tasks(args):
    print(prog_string('Reciprocal Best LAST', 
                      __version__, args.action))
    rbl = RBL(args.query, args.database, args.output, 
              n_threads=args.n_threads, cutoff=args.evalue_cutoff,
              use_existing_db=args.use_existing_db)
    return rbl.tasks()


def crbl_tasks(args):
    print(prog_string('Conditional Reciprocal Best LAST', 
                      __version__, args.action))

    crbl = CRBL(args.query, args.database, args.output,
                n_threads=args.n_threads, cutoff=args.evalue_cutoff,
                use_existing_db=args.use_existing_db)
    return crbl.tasks()


def main():

    parser = argparse.ArgumentParser()
    parser.add_argument('--version', action='version',
                        version='%(prog)s ' + __version__)
    subparsers = parser.add_subparsers()

    def add_common_args(p):
        p.add_argument('-q', '--query', required=True)
        p.add_argument('-d', '--database', required=True)
        p.add_argument('-o', '--output')
        p.add_argument('--n_threads', type=int, default=1)
        p.add_argument('-e', '--evalue-cutoff', default=0.00001, type=float)
        p.add_argument('--action', default='run')
        p.add_argument('--use-existing-db', default=None,
                       help='Use an existing LAST database with this suffix;'\
                            ' pass an empty string for no suffix')
        return p

    rbl_parser = add_common_args(subparsers.add_parser('rbl'))
    rbl_parser.set_defaults(func=rbl_tasks)

    crbl_parser = add_common_args(subparsers.add_parser('crbl'))
    crbl_parser.set_defaults(func=crbl_tasks)

    args = parser.parse_args()
    tasks = args.func(args)

    dep_file = '{0}.shmlast.doit.db'.format(os.path.basename(args.query))
    run_tasks(tasks, [args.action], config={'dep_file': dep_file,
                                            'versbosity': 2})   


if __name__ == '__main__':
    main()
