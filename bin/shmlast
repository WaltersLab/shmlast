#!/usr/bin/env python3

import argparse

from shmlast.crbl import ConditionalReciprocalBestLAST as CRBL
from shmlast.crbl import ReciprocalBestLAST as RBL
from shmlast.util import run_tasks


def rbl_tasks(args):
    rbl = RBL(args.query, args.database, args.output, 
              n_threads=args.n_threads)
    return rbl.tasks()


def crbl_tasks(args):
    crbl = CRBL(args.query, args.database, args.output,
                n_threads=args.n_threads)
    return crbl.tasks()


def main():

    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers()

    def add_common_args(p):
        p.add_argument('-q', '--query', required=True)
        p.add_argument('-d', '--database', required=True)
        p.add_argument('-o', '--output')
        p.add_argument('--n_threads', type=int, default=1)
        p.add_argument('--action', default='run')
        return p

    rbl_parser = add_common_args(subparsers.add_parser('rbl'))
    rbl_parser.set_defaults(func=rbl_tasks)

    crbl_parser = add_common_args(subparsers.add_parser('crbl'))
    crbl_parser.set_defaults(func=crbl_tasks)

    args = parser.parse_args()
    tasks = args.func(args)

    run_tasks(tasks, [args.action])   


if __name__ == '__main__':
    main()
